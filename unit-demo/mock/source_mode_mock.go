// Code generated by MockGen. DO NOT EDIT.
// Source: ./mockMode/source_mode.go

// Package mock_mockMode is a generated GoMock package.
package mock_mockMode

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAnimal is a mock of Animal interface
type MockAnimal struct {
	ctrl     *gomock.Controller
	recorder *MockAnimalMockRecorder
}

// MockAnimalMockRecorder is the mock recorder for MockAnimal
type MockAnimalMockRecorder struct {
	mock *MockAnimal
}

// NewMockAnimal creates a new mock instance
func NewMockAnimal(ctrl *gomock.Controller) *MockAnimal {
	mock := &MockAnimal{ctrl: ctrl}
	mock.recorder = &MockAnimalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAnimal) EXPECT() *MockAnimalMockRecorder {
	return m.recorder
}

// Hello mocks base method
func (m *MockAnimal) Hello(hi string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Hello", hi)
	ret0, _ := ret[0].(string)
	return ret0
}

// Hello indicates an expected call of Hello
func (mr *MockAnimalMockRecorder) Hello(hi interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hello", reflect.TypeOf((*MockAnimal)(nil).Hello), hi)
}
